import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { trpc } from "../utils/trpc";

export const Home: NextPage = () => {
  const emojis = trpc.emoji.random.useQuery();
  const update = trpc.emoji.update.useMutation();

  function updateResults(id: string, wins: number, total: number) {
    update.mutate({ id, wins, total })
  }

  return (
    <>
      <Head>
        <title>Best Emoji</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col min-h-screen items-center justify-center">
        <div className="flex">
        <div className="flex flex-col p-2 m-2"> 
          <h1 className="text-7xl m-4">{emojis.data?.first?.unicode}</h1>
          <button onClick={() => {
            if (emojis.data?.first && emojis.data?.second) {
              updateResults(emojis.data.first.id, emojis.data.first.wins + 1, emojis.data.first.total + 1);
              updateResults(emojis.data.second.id, emojis.data.second.wins, emojis.data.second.total + 1);
            }
            emojis.refetch();
          }}
          className="m-4 p-2 text-2xl border rounded">Vote</button>
        </div> 
        <div className="flex flex-col p-2 m-2">
          <h1 className="text-7xl m-4">{emojis.data?.second?.unicode}</h1>
          <button onClick={() => {
            if (emojis.data?.first && emojis.data?.second) {
              updateResults(emojis.data.first.id, emojis.data.first.wins, emojis.data.first.total + 1);
              updateResults(emojis.data.second.id, emojis.data.second.wins + 1, emojis.data.second.total + 1);
            }
            emojis.refetch();
          }}className="m-4 p-2 text-2xl border rounded">Vote</button>
        </div>
        </div>
        <Link href="/results" className="text-2xl">Results</Link>
      </main>
    </>
  );
};

export default Home;
